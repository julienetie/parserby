const globalDefaults={allowTags:[],allowTagRules:[]},doc=document.implementation.createHTMLDocument(),SAFE_URL_PATTERN=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:\/?#]*(?:[\/?#]|$))/i,sanitizeUrl=e=>(e=String(e)).match(SAFE_URL_PATTERN)?e:"unsafe:"+e,vulnerableAttributes=["href","src","srcset","style","background","action","formaction","xmlns"],vulnerableTags=["script","iframe","object","embed","meta","base","style","canvas","link","marquee","applet","frame","frameset"],xsskillah=(e,t,a)=>{const l=document.createTreeWalker(doc.body,NodeFilter.SHOW_ELEMENT),o={},s=[];let r;doc.body.innerHTML=e;const n=t?.allowTags||a?.allowTags||globalDefaults.allowTags,i=t?.allowTagRules||a?.allowTagRules||globalDefaults.allowTagRules;for(const e of i)o[e]=!0;for(vulnerableTags.filter((e=>!n.includes(e))).forEach((e=>{doc.body.querySelectorAll(e).forEach((e=>e.remove()))}));r=l.nextNode();){const e=s.indexOf(r);if(e>-1){s.splice(e,1);continue}const t=r.nodeType;if(1===t)for(const e of r.attributes){const a=e.value,l=e.name;if("input"===t&&"type"===l&&"text/javascript"===a&&o.inputTypeJS&&r.remove(),"form"===t&&"action"===l&&o.formAction){const e=r.querySelectorAll("*");s.push(...e),r.remove()}l.startsWith("on")&&!o.onEvents?r.removeAttribute(l):e.value=sanitizeUrl(a);const n=l.startsWith('"')&&!o.strayDoubleQuotes,i=l.startsWith("'")&&!o.straySingleQuote,c=l.startsWith("`")&&!o.strayBackTicks;(n||i||c)&&r.removeAttribute(l),(vulnerableAttributes.includes(l)||l.startsWith("data"))&&(e.value=sanitizeUrl(a))}}return doc.body};export{xsskillah as default};
//# sourceMappingURL=xsskillah.min.map